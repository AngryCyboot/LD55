[gd_resource type="VisualShader" load_steps=24 format=3 uid="uid://b445pju2e134v"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_c2o1p"]
constant = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4qtdq"]
default_input_values = [0, 0.0, 1, 4.0]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_naeny"]
expanded_output_ports = [0]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_7pf1f"]
operator = 8

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qv5ph"]
default_input_values = [0, 0.0, 1, 3.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_fln8y"]
function = 17

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_8kawx"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.1]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_msjbs"]
default_input_values = [0, 0.0, 1, 20.0]
operator = 3

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_v0gcq"]
default_input_values = [0, 0.0, 1, 30.0, 2, 0.0]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_bao25"]
default_input_values = [0, false, 1, true, 2, false]
op_type = 6

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_y88xy"]
function = 12

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_al6bl"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_v7w4g"]
operator = 1

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_1jtna"]
function = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ub5py"]
default_input_values = [0, 0.0, 1, 1.5]
operator = 3

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_vmb1f"]
function = 12

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_w5uky"]
default_input_values = [0, 0.0, 1, 3.0, 2, -0.75]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2ks2n"]
parameter_name = "size"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_g856k"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_y1k14"]

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_2u8l6"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.5]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_23r7y"]
default_input_values = [0, false, 1, true, 2, false]
op_type = 6

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_p5moo"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform float size;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// Output:0
	COLOR.rgb = n_out2p0;


}

void fragment() {
// ColorConstant:10
	vec4 n_out10p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// FloatParameter:33
	float n_out33p0 = size;


// Input:4
	vec4 n_out4p0 = COLOR;


// Distance:5
	vec3 n_in5p0 = vec3(0.00000, 0.00000, 0.00000);
	float n_out5p0 = distance(n_in5p0, vec3(n_out4p0.xyz));


// FloatOp:12
	float n_in12p1 = 4.00000;
	float n_out12p0 = n_out33p0 / n_in12p1;


// Compare:7
	bool n_out7p0 = (abs(n_out33p0 - n_out5p0) < n_out12p0);

// VectorOp:15
	vec3 n_in15p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out15p0 = vec3(n_out4p0.xyz) - n_in15p1;
	float n_out15p1 = n_out15p0.r;
	float n_out15p3 = n_out15p0.b;


// FloatOp:16
	float n_out16p0 = atan(n_out15p1, n_out15p3);


// FloatOp:17
	float n_in17p1 = 3.00000;
	float n_out17p0 = n_out16p0 * n_in17p1;


// FloatFunc:18
	float n_out18p0 = fract(n_out17p0);


// FloatOp:27
	float n_in27p1 = 0.50000;
	float n_out27p0 = n_out18p0 - n_in27p1;


// FloatFunc:26
	float n_out26p0 = abs(n_out27p0);


// MultiplyAdd:32
	float n_in32p1 = 3.00000;
	float n_in32p2 = -0.75000;
	float n_out32p0 = (n_out26p0 * n_in32p1) + n_in32p2;


// MultiplyAdd:24
	float n_out24p0 = (n_out32p0 * n_out12p0) + n_out33p0;


// FloatOp:23
	float n_in23p1 = 20.00000;
	float n_out23p0 = n_out33p0 / n_in23p1;


// Compare:22
	bool n_out22p0 = (abs(n_out24p0 - n_out5p0) < n_out23p0);

// FloatOp:28
	float n_out28p0 = n_out33p0 - n_out5p0;


// FloatFunc:31
	float n_out31p0 = abs(n_out28p0);


// FloatOp:30
	float n_in30p1 = 1.50000;
	float n_out30p0 = n_out12p0 / n_in30p1;


// Compare:29
	bool n_out29p0 = n_out31p0 > n_out30p0;


	bool n_out9p0;
// Switch:9
	bool n_in9p1 = true;
	if (n_out22p0) {
		n_out9p0 = n_in9p1;
	} else {
		n_out9p0 = n_out29p0;
	}


	bool n_out25p0;
// Switch:25
	bool n_in25p2 = false;
	if (n_out7p0) {
		n_out25p0 = n_out9p0;
	} else {
		n_out25p0 = n_in25p2;
	}


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	ALPHA = (n_out25p0 ? 1.0 : 0.0);


}
"
graph_offset = Vector2(-884.284, -189.945)
flags/unshaded = true
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_p5moo")
nodes/vertex/2/position = Vector2(-280, 420)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 6)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_g856k")
nodes/fragment/4/position = Vector2(-2340, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDistance_y1k14")
nodes/fragment/5/position = Vector2(-1660, 220)
nodes/fragment/7/node = SubResource("VisualShaderNodeCompare_2u8l6")
nodes/fragment/7/position = Vector2(-320, 160)
nodes/fragment/9/node = SubResource("VisualShaderNodeSwitch_23r7y")
nodes/fragment/9/position = Vector2(-80, 80)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_c2o1p")
nodes/fragment/10/position = Vector2(260.418, 94.312)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_4qtdq")
nodes/fragment/12/position = Vector2(-1180, -140)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorOp_naeny")
nodes/fragment/15/position = Vector2(-1780, -300)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_7pf1f")
nodes/fragment/16/position = Vector2(-1580, -300)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_qv5ph")
nodes/fragment/17/position = Vector2(-1420, -320)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatFunc_fln8y")
nodes/fragment/18/position = Vector2(-1240, -300)
nodes/fragment/22/node = SubResource("VisualShaderNodeCompare_8kawx")
nodes/fragment/22/position = Vector2(-320, -40)
nodes/fragment/23/node = SubResource("VisualShaderNodeFloatOp_msjbs")
nodes/fragment/23/position = Vector2(-520, 100)
nodes/fragment/24/node = SubResource("VisualShaderNodeMultiplyAdd_v0gcq")
nodes/fragment/24/position = Vector2(-520, -180)
nodes/fragment/25/node = SubResource("VisualShaderNodeSwitch_bao25")
nodes/fragment/25/position = Vector2(160, 200)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatFunc_y88xy")
nodes/fragment/26/position = Vector2(-900, -280)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatOp_al6bl")
nodes/fragment/27/position = Vector2(-1060, -300)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatOp_v7w4g")
nodes/fragment/28/position = Vector2(-1180, 380)
nodes/fragment/29/node = SubResource("VisualShaderNodeCompare_1jtna")
nodes/fragment/29/position = Vector2(-320, 360)
nodes/fragment/30/node = SubResource("VisualShaderNodeFloatOp_ub5py")
nodes/fragment/30/position = Vector2(-660, 460)
nodes/fragment/31/node = SubResource("VisualShaderNodeFloatFunc_vmb1f")
nodes/fragment/31/position = Vector2(-1000, 420)
nodes/fragment/32/node = SubResource("VisualShaderNodeMultiplyAdd_w5uky")
nodes/fragment/32/position = Vector2(-700, -300)
nodes/fragment/33/node = SubResource("VisualShaderNodeFloatParameter_2ks2n")
nodes/fragment/33/position = Vector2(-1660, 40)
nodes/fragment/connections = PackedInt32Array(10, 0, 0, 0, 4, 0, 5, 1, 15, 1, 16, 0, 15, 3, 16, 1, 16, 0, 17, 0, 17, 0, 18, 0, 9, 0, 25, 1, 25, 0, 0, 1, 4, 0, 15, 0, 18, 0, 27, 0, 27, 0, 26, 0, 5, 0, 7, 1, 7, 0, 25, 0, 5, 0, 22, 1, 24, 0, 22, 0, 22, 0, 9, 0, 23, 0, 22, 2, 12, 0, 7, 2, 5, 0, 28, 1, 30, 0, 29, 1, 29, 0, 9, 2, 12, 0, 30, 0, 28, 0, 31, 0, 31, 0, 29, 0, 12, 0, 24, 1, 26, 0, 32, 0, 32, 0, 24, 0, 33, 0, 12, 0, 33, 0, 28, 0, 33, 0, 23, 0, 33, 0, 7, 0, 33, 0, 24, 2)
